# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#DEVICE
GET     /get_devices          controllers.DeviceController.getDevice(format: String = "csv")
GET     /get_devices/csv      controllers.DeviceController.getDevice(format: String = "csv")
GET     /get_devices/json     controllers.DeviceController.getDevice(format: String = "json")
GET     /get_sensor_types/:deviceType controllers.DeviceController.getSensorType(deviceType: String, format: String = "csv")
GET     /get_sensor_types/:deviceType/csv controllers.DeviceController.getSensorType(deviceType: String, format: String = "csv")
GET     /get_sensor_types/:deviceType/json controllers.DeviceController.getSensorType(deviceType: String, format: String = "json")
POST    /device               controllers.DeviceController.add()
POST    /device/              controllers.DeviceController.add()

# SensorReading
GET		/sensors/:deviceId/:timeStamp/:sensorType			controllers.SensorReadingController.searchAtTime(deviceId: String, timeStamp: String, sensorType: String, format: String = "csv")
GET     /sensors/:deviceId/:timeStamp/:sensorType/csv       controllers.SensorReadingController.searchAtTime(deviceId: String, timeStamp: String, sensorType: String, format: String = "csv")
GET		/sensors/:deviceId/:timeStamp/:sensorType/json	controllers.SensorReadingController.searchAtTime(deviceId: String, timeStamp: String, sensorType: String, format: String = "json")
GET 	/sensors/:deviceId/:startTime/:endTime/:sensorType	controllers.SensorReadingController.searchInTimeRange(deviceId: String, startTime: String, endTime: String, sensorType: String, format: String = "csv")
GET     /sensors/:deviceId/:startTime/:endTime/:sensorType/csv  controllers.SensorReadingController.searchInTimeRange(deviceId: String, startTime: String, endTime: String, sensorType: String, format: String = "csv")
GET 	/sensors/:deviceId/:startTime/:endTime/:sensorType/json	controllers.SensorReadingController.searchInTimeRange(deviceId: String, startTime: String, endTime: String, sensorType: String, format: String = "json")
GET		/last_readings_from_all_devices/:timeStamp/:sensorType	controllers.SensorReadingController.lastReadingFromAllDevices(timeStamp: Long, sensorType:String, format: String = "csv")
GET     /last_readings_from_all_devices/:timeStamp/:sensorType/csv  controllers.SensorReadingController.lastReadingFromAllDevices(timeStamp: Long, sensorType:String, format: String = "csv")
GET		/last_readings_from_all_devices/:timeStamp/:sensorType/json	controllers.SensorReadingController.lastReadingFromAllDevices(timeStamp: Long, sensorType:String, format: String = "json")
GET     /lastest_readings_from_all_devices/:sensorType  controllers.SensorReadingController.lastestReadingFromAllDevices(sensorType:String, format: String = "csv")
GET     /lastest_readings_from_all_devices/:sensorType/csv  controllers.SensorReadingController.lastestReadingFromAllDevices(sensorType:String, format: String = "csv")
GET     /lastest_readings_from_all_devices/:sensorType/json controllers.SensorReadingController.lastestReadingFromAllDevices(sensorType:String, format: String = "json")
POST    /sql_query                          controllers.SensorReadingController.sql_query()
POST	/sensors/				  			controllers.SensorReadingController.add(publish:Boolean = false)
POST	/sensors				  			controllers.SensorReadingController.add(publish:Boolean = false)
POST	/sensors_save/				  		controllers.SensorReadingController.add(publish:Boolean = false)
POST	/sensors_save				  		controllers.SensorReadingController.add(publish:Boolean = false)

#Metadata
POST	/add_sensor_type				  controllers.MetadataController.addSensorType()
POST	/add_sensor				  controllers.MetadataController.addSensor()
POST	/add_device_type 			controllers.MetadataController.addDeviceType()
POST	/add_device 			controllers.MetadataController.addDevice()

# WorkFlow
POST	/workflow/							controllers.WorkFlowRunnerController.changeInterval()
GET		/workflow/							controllers.WorkFlowRunnerController.index(format:String = "html")
GET		/workflow.json						controllers.WorkFlowRunnerController.index(format:String = "json")
